# zmodload zsh/zprof
#2 try
alias npx='bunx'
touch ~/.hushlogin # to disable the login message
alias try='mkdir -p ~/projects/try && cd ~/projects/try && code . && week_dir=$(date +%y-week%V) && mkdir -p "$week_dir" && names=(Inspirational Discovery Adventure Pioneer Quantum Leap Innovation Synergy Revolution) && new_file="" && for name in "${names[@]}"; do if [[ ! -e "$week_dir/$name.ipynb" ]]; then new_file="$week_dir/$name.ipynb"; touch "$new_file"; break; fi; done && [[ -n "$new_file" ]] && code "$new_file"'
alias d='nr dev 2>/dev/null || nr start'
alias update='sudo -v && brew cu -a -y && tldr --update && chezmoi re-add && chezmoi update && sudo reboot'

# zinit
# autoload -Uz compinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

zinit wait lucid atload"_zsh_autosuggest_start" for zsh-users/zsh-autosuggestions
zinit wait lucid for zsh-users/zsh-syntax-highlighting
zinit wait lucid for hlissner/zsh-autopair
zinit wait lucid for OMZP::git-prompt
zinit wait lucid for OMZP::command-not-found
zinit wait lucid for OMZP::git-auto-fetch
zinit wait lucid for OMZP::autojump

zinit for \
    atload"zicompinit; zicdreplay" \
    blockf \
    lucid \
    wait \
  zsh-users/zsh-completions

#2 try

#1.2 better for daily
alias \$=''
alias rm='trash'
alias typora='open -a typora'

##1.2 too see
alias dalle2='bash ~/config/dalle2.sh -p "New Yorker style line drawing, " -n 5 -s "1024x1024" -d'
alias fast-dl='aria2c -x 16 -s 16 -j 16 -k 1M -c -d ~/Downloads'
alias fast-yt-dlp='yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M"'
alias yt-audio-dl='yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M" -x --no-playlist'
alias gettxt='cat *.txt'
getfile(){pandoc $1 --to plain}
epub2txt() { for file in *.epub; do pandoc "$file" --to plain -o "${file%.epub}.txt"; done; }
geturls() {
    timestamp=$(date +%Y%m%d%H%M%S)
    mkdir -p ~/Downloads/articles/$timestamp
    node ~/projects/get-articles/index.js $1
}
splittxt() {
    mkdir -p ~/Downloads/txts
    cat *.txt | split -b 180k -d -a 2 - ~/Downloads/txts/
}
copynext() {
    for f in *; do 
        [[ $f != *_sent ]] || continue
        cat $f | pbcopy
        echo -e "\033[0;32mCopied $f\033[0m"
        mv $f ${f}_sent
        break
    done
}

alias vimz='nvim ~/.zshrc'

# git
alias gdd='branch_for_delete=$(git rev-parse --abbrev-ref HEAD) && { git switch main || git switch master; } && git pull && git branch -d $branch_for_delete'

## repo
alias ghrd='ghpew repos'

# homebrew
alias brewb='brew bundle --file=~/.config/homebrew/Brewfile'
alias vimb='nvim ~/.config/homebrew/Brewfile'

# nvim
alias vim='nvim'
alias vimt='nvim ~/.tmux.conf'

# chezmoi
export LANG=en_US.UTF-8

# development
touch ~/development.sh
source ~/development.sh

## yabai&skhd
alias vimy='nvim ~/.config/yabai/yabairc'
alias vims='nvim ~/.config/skhd/skhdrc'

## espanso
alias cde='cd ~/Library/Application\ Support/espanso/match'
alias vime='nvim ~/Library/Application\ Support/espanso/match/base.yml'
alias vimeg='nvim ~/Library/Application\ Support/espanso/match/git.yml'
alias vimed='nvim ~/Library/Application\ Support/espanso/match/del.yml'

## atuin
alias vima='nvim ~/.config/atuin/config.toml'

zstyle ':completion:*' menu select
fpath+=~/.zfunc
eval "$(atuin init zsh)"
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}

# Created by `pipx`
export PATH="$PATH:~/.local/bin"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
