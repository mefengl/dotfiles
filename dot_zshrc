#2 try
function ni() {
  command ni "$@"
  echo "nun ${@:1}" >> $HISTFILE
  fc -R $HISTFILE
}
function nun() {
  command nun "$@"
  echo "ni ${@:1}" >> $HISTFILE
  fc -R $HISTFILE
}
function brew() {
  if [[ $1 == 'install' ]]; then
    command brew "$@"
    echo "brew uninstall ${@:2}" >> $HISTFILE
    fc -R $HISTFILE
  elif [[ $1 == 'uninstall' ]]; then
    command brew "$@"
    echo "brew install ${@:2}" >> $HISTFILE
    fc -R $HISTFILE
  else
    command brew "$@"
  fi
}

alias gnb='bash ~/config/git-next-branch.sh'
alias gnbo='gfo && gnb'

# zplug
if [[ ! -d ~/.zplug ]]; then
    git clone https://github.com/zplug/zplug ~/.zplug
fi
source ~/.zplug/init.zsh

zplug "zplug/zplug", hook-build: "zplug --self-manage"
zplug "RiverGlide/zsh-goenv", from:gitlab

# zsh users
zplug "zsh-users/zsh-completions",              defer:0
zplug "zsh-users/zsh-autosuggestions",          defer:2, on:"zsh-users/zsh-completions" 
zplug "zsh-users/zsh-syntax-highlighting",      defer:3, on:"zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search", defer:3, on:"zsh-users/zsh-syntax-highlighting"

# oh-my-zsh
##2 try
## scala
zplug "plugins/sbt", from:oh-my-zsh

zplug "plugins/pip", from:oh-my-zsh
zplug "plugins/git-prompt", from:oh-my-zsh # add numbers of behind and ahead
zplug "plugins/gitignore", from:oh-my-zsh
# zplug "plugins/common-aliases", from:oh-my-zsh
zplug "plugins/command-not-found", from:oh-my-zsh

zplug "plugins/tmux", from:oh-my-zsh

zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/terraform", from:oh-my-zsh

## alias & fast operation
zplug "plugins/aliases", from:oh-my-zsh
zplug "djui/alias-tips"

zplug "plugins/git", from:oh-my-zsh
zplug "plugins/git-auto-fetch", from:oh-my-zsh

zplug "plugins/brew", from:oh-my-zsh
zplug "plugins/vscode", from:oh-my-zsh
zplug "plugins/autojump", from:oh-my-zsh
## env
zplug "plugins/pyenv", from:oh-my-zsh
zplug "plugins/nvm", from:oh-my-zsh
zplug "plugins/rbenv", from:oh-my-zsh

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load

#2 try

# pnpm
export PNPM_HOME="$HOME/.pnpm-global/bin"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# docker
alias awsdocker='aws ecr get-login-password --region $aws_region | docker login --username AWS --password-stdin $aws_prefix'

#1.2 better for daily
alias \$=''
alias rm='trash'
alias ss='exec zsh'
alias q='exit'
github_clone(){gh repo list mefengl | awk '{print $1}' | xargs -L1 gh repo clone 2>/dev/null}
github_update(){echo -e "\033[32mgithub_update:\033[0m";cd ~/GitHub;github_clone;for i in *;do cd $i;git pull;cd ~;done}
alias update='tldr --update; zplug update'

#1.5 to see
alias yt-dlp-base='yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M"' 
yt-dlp-audio(){
  cd ~/Downloads && yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M" -x --audio-format wav -o 'del.wav' $1 && bash ~/config/whisper.sh del.wav
}
# starship
alias vimstar='nvim ~/.config/starship.toml'

# github
alias ghr='gh repo'
alias ghc='gh repo clone'
alias ghcm='bash ~/config/ghclone.sh'
## repo
ghrc() {
  if [ $# -eq 1 ]; then
    gh repo create $1 --public --add-readme --gitignore Node --license MIT -c
  else
    echo "Usage: ghrc <repository_name>"
  fi
}
alias ghrd='ghpew repos'
alias ghrv='gh repo view --web'
## gist
ghgc() {
  echo "Press ^D on a new line to finish."
  if [ -z "$1" ]; then
    gh gist create --public -
  else
    gh gist create --public -f "$1" -
  fi
}
alias ghgd='gh gist delete'
alias ghgv='gh gist view'
alias ghgl='gh gist list'
## else
alias ghprv='gh pr view --web'
alias ghfv='git-file-history'
create_issue() {
  gh issue create --title="$1" --body="$2" --assignee=mefengl
}

## ?? git? gh?
eval "$(github-copilot-cli alias -- "$0")"

# git
alias gdaily='git commit -am "daily: $(date +%m/%d)" && git push'

# node
alias npmb='bash ~/.config/ppm.sh'
alias vimn='nvim ~/.config/ppm.sh'
alias coden='code ~/.config/ppm.sh'

# python
alias pipb='bash ~/.config/pipm.sh'
alias vimp='nvim ~/.config/pipm.sh'
alias codep='code ~/.config/pipm.sh'

# homebrew
alias brewb='brew bundle --file=~/.config/homebrew/Brewfile'
alias vimb='nvim ~/.config/homebrew/Brewfile'
alias codeb='code ~/.config/homebrew/Brewfile'

# ruby
alias gemb='/Users/fl/.rbenv/shims/bundle install --gemfile=~/.config/ruby/Gemfile && rm ~/.config/ruby/Gemfile.lock'
alias vimr='nvim ~/.config/ruby/Gemfile'
alias coder='code ~/.config/ruby/Gemfile'

# nvim
alias vim='nvim'
alias vimz='nvim ~/.zshrc'
alias codez='code ~/.zshrc'
alias vimt='nvim ~/.tmux.conf'
# vscode
alias codek='code ~/.config/karabiner/karabiner.json'
alias codeb='code ~/.config/homebrew/Brewfile'
alias codei='nr test && vsce package && code --install-extension $(ls -t *.vsix | head -n 1) && rm -f *.vsix && echo "\033[0;32m\nPlease reload your terminal window to let the extension take effect.\033[0m"'
alias codeif='yes | vsce package && code --install-extension $(ls -t *.vsix | head -n 1) && rm -f *.vsix && echo "\033[0;32m\nPlease reload your terminal window to let the extension take effect.\033[0m"'

# chezmoi
export LANG=en_US.UTF-8
alias checd="chezmoi cd"
alias chea="chezmoi add"
alias chera="chezmoi re-add"
alias cherm="chezmoi remove"
alias cheu="chezmoi update"

# git
alias gpp='ga .;gcmsg "zz";gp'
alias gdd='previous_branch=$(current_branch) && git checkout $(git_main_branch) && git pull && git branch -d $previous_branch'

# development
touch ~/development.sh
source ~/development.sh

## yabai&skhd
alias vimy='nvim ~/.config/yabai/yabairc'
alias vims='nvim ~/.config/skhd/skhdrc'

eval "$(starship init zsh)"

autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc
