# shell prompt
eval "$(starship init zsh)"
touch ~/.hushlogin # disable the login message

# source antidote
source $HOME/.antidote/antidote.zsh
# initialize plugins statically with ${ZDOTDIR:-~}/.zsh_plugins.txt
antidote load

# zoxide: z, replacement of j
eval "$(zoxide init zsh)"

#2 try

# a little fresh air for tools from last century
alias ls='ls -G'
alias grep='grep --color'

# dev
alias d='nr dev 2>/dev/null || nr start'
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}
alias update='brew cu -a -y && brew cleanup --prune=all; brew autoremove && pnpm update --global && tldr --update && chezmoi re-add && chezmoi update'

#2 try

#1.2 better for daily
alias \$=''
alias \#='echo'
alias rm='trash'
alias typora='open -a typora'

##1.2 too see
alias dalle2='bash ~/config/dalle2.sh -p "New Yorker style line drawing, " -n 5 -s "1024x1024" -d'
alias fast-dl='aria2c -x 16 -s 16 -j 16 -k 1M -c -d ~/Downloads'
alias fast-yt-dlp='yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M"'
alias yt-audio-dl='yt-dlp --external-downloader aria2c --external-downloader-args "-x16 -s16 -k2M" -x --no-playlist'
alias gettxt='cat *.txt'
getfile(){pandoc $1 --to plain}
epub2txt() { for file in *.epub; do pandoc "$file" --to plain -o "${file%.epub}.txt"; done; }
geturls() {
    timestamp=$(date +%Y%m%d%H%M%S)
    mkdir -p ~/Downloads/articles/$timestamp
    node ~/projects/get-articles/index.js $1
}
splittxt() {
    mkdir -p ~/Downloads/txts
    cat *.txt | split -b 180k -d -a 2 - ~/Downloads/txts/
}
copynext() {
    for f in *; do 
        [[ $f != *_sent ]] || continue
        cat $f | pbcopy
        echo -e "\033[0;32mCopied $f\033[0m"
        mv $f ${f}_sent
        break
    done
}

alias vimz='vim ~/.zshrc'

# git
alias gdd='branch_for_delete=$(git rev-parse --abbrev-ref HEAD) && { git switch main || git switch master; } && git pull && git branch -d $branch_for_delete'

## repo
alias ghr="find ~/DEL ~/Links ~/projects ~/Sourcetree -maxdepth 1 | fzf --height 15 | xargs -I {} bash -c '[[ {} =~ \.sh$ ]] && bash {} || code {}' && exit"
alias ghrc='clear && gh repo list mefengl --limit 1024 --json name -q '\''.[].name'\'' | fzf --height 15 --prompt="Select a repository to clone: " | xargs -I {} sh -c "gh repo clone mefengl/{} ~/projects/{} && code ~/projects/{}" && exit'
alias ghrd='ghpew repos'

# homebrew
alias brewb='brew bundle --file=~/.config/homebrew/Brewfile'
alias vimb='vim ~/.config/homebrew/Brewfile'

# terminal
alias vima='vim ~/.config/alacritty/alacritty.toml'

# vim
alias vimv='vim ~/.vimrc'

# tmux
alias vimt='vim ~/.tmux.conf'

# chezmoi
export LANG=en_US.UTF-8

# development
touch ~/development.sh
source ~/development.sh

## yabai&skhd
alias vimy='vim ~/.config/yabai/yabairc'
alias vims='vim ~/.config/skhd/skhdrc'

## espanso
alias cde='cd ~/Library/Application\ Support/espanso/match'
alias vime='vim ~/Library/Application\ Support/espanso/match/base.yml'
alias vimeg='vim ~/Library/Application\ Support/espanso/match/git.yml'
alias vimec='vim ~/Library/Application\ Support/espanso/match/chat.yml'
alias vimecc='vim ~/Library/Application\ Support/espanso/match/code.yml'
alias vimed='vim ~/Library/Application\ Support/espanso/match/del.yml'

# config like this should be put together
## atuin
# alias vima='vim ~/.config/atuin/config.toml'

zstyle ':completion:*' menu select
fpath+=~/.zfunc
eval "$(atuin init zsh)"

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# pdm: python package manager
export PATH=$HOME/Library/Python/3.9/bin:$PATH

# Created by `pipx`
export PATH="$PATH:~/.local/bin"

# android
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools

