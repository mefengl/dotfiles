global_vars:
  - name: "clipboard"  # https://espanso.org/docs/matches/extensions/#clipboard-extension
    type: "clipboard"

matches:
  # try
  - trigger: ":try"
    replace: "try"

  - trigger: ":td"
    replace: "{{today_date}} "
    vars:
      - name: today_date
        type: date
        params:
          format: "%Y-%m-%d"
  - trigger: ":tw"
    replace: "{{year_month_week}}"
    vars:
      - name: year_month_week
        type: shell
        params:
          cmd: "YEAR=$(date +'%Y'); MONTH=$(date +'%m'); WEEK_IN_MONTH=$((($(date +'%d') - 1) / 7 + 1)); WEEK_WORD=$(echo 'one two three four' | cut -d' ' -f${WEEK_IN_MONTH}); echo ${YEAR}-${MONTH}-${WEEK_WORD}"
  - trigger: ":nw"
    replace: "{{next_year_month_week}}"
    vars:
      - name: next_year_month_week
        type: shell
        params:
          cmd: "NEXT_DATE=$(date -v +1w +'%Y-%m-%d'); YEAR=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%Y'); MONTH=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%m'); DAY=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%d'); WEEK_IN_MONTH=$(((DAY - 1) / 7 + 1)); WEEK_WORD=$(echo 'one two three four' | cut -d' ' -f${WEEK_IN_MONTH}); echo ${YEAR}-${MONTH}-${WEEK_WORD}"

  - trigger: ":done"
    replace: " âœ…"

  - trigger: ":query"
    replace: "document.querySelectorAll('"
  - trigger: ":gh"
    replace: "in:name,readme,description language:javascript language:typescript pushed:>=2024-01-01 stars:>10"
  - trigger: ":rsync"
    replace: 'rsync -av --exclude ".git" --exclude "node_modules" --exclude ".next"'
  - trigger: ":add openvpn"
    replace: "wget -qO- https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh | AUTO_INSTALL=y bash"
  - trigger: ":add wormhole"
    replace: "sudo apt install magic-wormhole"
  - trigger: ":add omakub"
    replace: "wget -qO- https://omakub.org/install | bash"

  - trigger: ":add z-plug"
    replace: "git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.antidote && touch ~/.zsh_plugins.txt"
  - trigger: ":add vim-plug"
    replace: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"

  - trigger: ":add pdm"
    replace: 'curl -sSL https://pdm-project.org/install-pdm.py | python3 -'
  - trigger: ":remove pdm"
    replace: 'pip uninstall pdm'
  # - trigger: ":add nvm"
  #   replace: 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$(curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | grep "tag_name" | cut -d\" -f4)/install.sh | bash && export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
  - trigger: ":add pnpm"
    replace: 'curl -fsSL https://get.pnpm.io/install.sh | sh -'
  - trigger: ":add yarn"
    replace: "pnpm install --global yarn"
  - trigger: ":add node"
    replace: "pnpm env use --global lts"
  - trigger: ":add antfu"
    replace: "pnpm install --global @antfu/ni taze bumpp"
  - trigger: ":add iconify"
    replace: "ni -g @iconify-icon/react"
  - trigger: ":add ai"
    replace: "pnpm install --global @builder.io/ai-shell"
  - trigger: ":add bun"
    replace: 'pnpm install -g bun'
  - trigger: ":add vite"
    replace: 'npm create vite@latest'
  - trigger: ":add react"
    replace: 'npm create vite@latest -- --template react-ts'
  - trigger: ":add next"
    replace: "nlx create-next-app@latest"
  - trigger: ":add vercel"
    replace: "pnpm install --global vercel"
  - trigger: ":add shadcn"
    replace: "npx shadcn-ui@latest init"
  - trigger: ":add wxt"
    replace: "npx wxt@latest init "
  - trigger: ":new vite"
    replace: "npm create vite@latest"
  - trigger: ":new react"
    replace: "gh repo create --template mefengl/react-starter --private "
  - trigger: ":new wxt"
    replace: "gh repo create --template mefengl/wxt-starter --private "
  - trigger: ":add electron"
    replace: 'npm create @quick-start/electron@latest'
  - trigger: ":new electron"
    replace: 'gh repo create --template mefengl/electron-starter --private '
  - trigger: ":add elysia"
    replace: "bun create elysia"
  - trigger: ":add tailwind"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "open https://tailwindcss.com/docs/guides/vite"
  - trigger: ":add form"
    replace: "ni zod react-hook-form @hookform/resolvers"
  - trigger: ":add pm2"
    replace: 'npm install pm2@latest -g'
  - trigger: ":add python"
    replace: 'sudo DEBIAN_FRONTEND=noninteractive apt install python-is-python3 -y'
  - trigger: ":add ni"
    replace: 'npm i -g @antfu/ni'
  - trigger: ":add eslint"
    replace: 'npx @antfu/eslint-config && ni -D @eslint/eslintrc eslint-plugin-tailwindcss && ni -D eslint-plugin-format'
  - trigger: ":add docker"
    replace: 'sudo DEBIAN_FRONTEND=noninteractive apt install docker.io -y'
  - trigger: ":add docker-compose"
    replace: 'sudo DEBIAN_FRONTEND=noninteractive apt install docker-compose -y'
  # doctl
  - trigger: ":doctl"
    replace: "doctl compute droplet create --image ubuntu-22-04-x64 --size s-1vcpu-512mb-10gb --region sfo3 --ssh-keys $(doctl compute ssh-key list | awk 'NR>1 {print $1}') try"
  - trigger: ":doctl"
    replace: "doctl compute ssh try"
  - trigger: ":doctl"
    replace: "doctl compute droplet delete -f try"
  - trigger: ":doctl"
    replace: "doctl compute ssh try"
  # ai
  - trigger: ":add ollama"
    replace: "open https://ollama.com/download"
  - trigger: ":add android"
    replace: "open https://docs.expo.dev/workflow/android-studio-emulator"
  # meta
  - trigger: ":trigger"
    replace: |
      - trigger: ""
        replace: ""
