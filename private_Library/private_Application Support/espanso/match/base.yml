global_vars:
  - name: "clipboard"  # https://espanso.org/docs/matches/extensions/#clipboard-extension
    type: "clipboard"

matches:
  - trigger: ":unroll"
    replace: "@threadreaderapp unroll"

  - trigger: ":td"
    replace: "{{today_date}} "
    vars:
      - name: today_date
        type: date
        params:
          format: "%Y-%m-%d"
  - trigger: ":tw"
    replace: "{{year_month_week}}"
    vars:
      - name: year_month_week
        type: shell
        params:
          cmd: "YEAR=$(date +'%Y'); MONTH=$(date +'%m'); WEEK_IN_MONTH=$((($(date +'%d') - 1) / 7 + 1)); WEEK_WORD=$(echo 'one two three four' | cut -d' ' -f${WEEK_IN_MONTH}); echo ${YEAR}-${MONTH}-${WEEK_WORD}"
  - trigger: ":nw"
    replace: "{{next_year_month_week}}"
    vars:
      - name: next_year_month_week
        type: shell
        params:
          cmd: "NEXT_DATE=$(date -v +1w +'%Y-%m-%d'); YEAR=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%Y'); MONTH=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%m'); DAY=$(date -j -f '%Y-%m-%d' ${NEXT_DATE} +'%d'); WEEK_IN_MONTH=$(((DAY - 1) / 7 + 1)); WEEK_WORD=$(echo 'one two three four' | cut -d' ' -f${WEEK_IN_MONTH}); echo ${YEAR}-${MONTH}-${WEEK_WORD}"

  - trigger: ":done"
    replace: " âœ…"

  - trigger: ":query"
    replace: "document.querySelectorAll('"
  # gh
  - trigger: ":github"
    replace: "in:name,readme,description language:javascript language:typescript pushed:>=2024-01-01 stars:>10"
  - trigger: ":gh repo create local"
    replace: "git remote remove origin; gh repo create --private --source . --push $(basename \"$PWD\")"
  - trigger: ":gh repo create remote"
    replace: "gh repo create --private --clone --add-readme "
  - trigger: ":new uv"
    replace: "gh repo create --private --clone --template mefengl/uv-starter "
  # - trigger: ":new react"
  #   replace: "gh repo create --private --clone --template mefengl/react-starter "
  - trigger: ":new tanstack"
    replace: "gh repo create --private --clone --template mefengl/tanstack-starter "
  - trigger: ":new wxt"
    replace: "gh repo create --private --clone --template mefengl/wxt-starter "
  - trigger: ":new vscode"
    replace: "gh repo create --private --clone --template mefengl/starter-vscode-mefengl "
  - trigger: ":new expo"
    replace: "gh repo create --private --clone --template mefengl/expo-starter "
  - trigger: ":new electron"
    replace: 'gh repo create --private --clone --template mefengl/electron-starter '
  - trigger: ":new taro"
    replace: 'gh repo create --private --clone --template mefengl/taro-starter '

  - trigger: ":rsync"
    replace: 'rsync -av --exclude ".git" --exclude "node_modules" --exclude ".next"'
  - trigger: ":add openvpn"
    replace: "wget -qO- https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh | AUTO_INSTALL=y bash"
  - trigger: ":add wormhole"
    replace: "sudo apt install magic-wormhole"
  - trigger: ":file.io"
    replace: 'curl https://file.io -F "file=@$|$"'
    vars:
      - name: file_path
        type: file
  - trigger: ":add omakub"
    replace: "wget -qO- https://omakub.org/install | bash"

  - trigger: ":add mise"
    replace: "curl https://mise.run | sh"
  # node
  - trigger: ":add node"
    replace: "mise remove -y node; mise use -g node@lts"
  # bun
  - trigger: ":add bun"
    replace: "mise remove -y bun; mise use -g bun"
  - trigger: ":add antfu"
    replace: "bun install --global @antfu/ni bumpp taze"
  - trigger: ":add pnpm"
    replace: "bun install --global pnpm"
  - trigger: ":add yarn"
    replace: "bun install --global yarn"
  - trigger: ":add pm2"
    replace: 'bun install --global pm2@latest'
  - trigger: ":add supabase"
    replace: "bun install --global supabase"
  - trigger: ":add shadcn"
    replace: "bunx shadcn-ui@latest init"
  # deno
  - trigger: ":add deno"
    replace: "mise remove -y deno; mise use -g deno"
  # zig
  - trigger: ":add zig"
    replace: "mise remove -y zig; mise use -g zig"
  # go
  - trigger: ":add go"
    replace: "mise remove -y go; mise use -g go"
  - trigger: ":add flarectl"
    replace: "go install github.com/cloudflare/cloudflare-go/cmd/flarectl@latest"
  # ruby
  - trigger: ":add ruby"
    replace: "mise remove -y ruby; mise use -g ruby"
  - trigger: ":add kamal"
    replace: "gem install kamal"
  - trigger: ":add rails"
    replace: "gem install rails"
  # python - uv
  - trigger: ":add uv"
    replace: 'curl -LsSf https://astral.sh/uv/install.sh | sh'
  - trigger: ":add python"
    replace: 'uv python install'
  - trigger: ":add ruff"
    replace: 'uv tool install ruff'
  - trigger: ":sqlite"
    replace: 'uvx --from sqlite-web sqlite_web '
  # rust
  - trigger: ":add rust"
    replace: "mise remove -y rust; mise use -g rust"

  - trigger: ":add z-plug"
    replace: "git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.antidote && touch ~/.zsh_plugins.txt"
  - trigger: ":add vim-plug"
    replace: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"

  - trigger: ":add iconify"
    replace: "ni @iconify-icon/react"
  - trigger: ":add next"
    replace: "nlx create-next-app@latest"
  - trigger: ":add wxt"
    replace: "bunx wxt@latest init "
  - trigger: ":new vite"
    replace: "bun create vite@latest"
  - trigger: ":new react"
    replace: 'bun create vite@latest --template react-ts'
  - trigger: ":add electron"
    replace: 'npm create @quick-start/electron@latest'
  - trigger: ":add tailwind"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "open https://tailwindcss.com/docs/guides/vite"
  - trigger: ":add nativewind"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "open https://www.nativewind.dev/v4/getting-started/expo-router"
  - trigger: ":add cn"
    replace: "ni clsx tailwind-merge"
  - trigger: ":add form"
    replace: "ni zod react-hook-form @hookform/resolvers"
  - trigger: ":add eslint"
    replace: 'bunx @antfu/eslint-config'

  - trigger: ":add docker"
    replace: 'sudo DEBIAN_FRONTEND=noninteractive apt install docker.io docker-compose -y'
  - trigger: ":docker clean"
    replace: 'docker rm $(docker ps -a -q); docker rmi $(docker images -q); docker volume rm $(docker volume ls -q)'

  - trigger: ":add sql-studio"
    replace: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/frectonz/sql-studio/releases/download/0.1.32/sql-studio-installer.sh | sh"


  - trigger: ":ubuntu"
    replace: "docker run -it --rm --name devcontainer mcr.microsoft.com/devcontainers/base:ubuntu-22.04"
  # doctl
  - trigger: ":doctl ip"
    replace: "doctl compute droplet list --format Name,PublicIPv4"

  - trigger: ":doctl tiny create"
    replace: "doctl compute droplet create --image ubuntu-22-04-x64 --size s-1vcpu-512mb-10gb --region sfo3 --ssh-keys $(doctl compute ssh-key list | awk '$2 == \"try\" {print $1}') tiny"
  - trigger: ":doctl tiny ssh"
    replace: "doctl compute ssh tiny"
  - trigger: ":doctl tiny delete"
    replace: "doctl compute droplet delete -f tiny"

  - trigger: ":doctl small create"
    replace: "doctl compute droplet create --image ubuntu-22-04-x64 --size s-1vcpu-1gb-35gb-intel --region sfo3 --ssh-keys $(doctl compute ssh-key list | awk '$2 == \"try\" {print $1}') small"
  - trigger: ":doctl small ssh"
    replace: "doctl compute ssh small"
  - trigger: ":doctl small delete"
    replace: "doctl compute droplet delete -f small"

  - trigger: ":doctl try create"
    replace: "doctl compute droplet create --image ubuntu-22-04-x64 --size s-1vcpu-2gb-70gb-intel --region sfo3 --ssh-keys $(doctl compute ssh-key list | awk '$2 == \"try\" {print $1}') try"
  - trigger: ":doctl try ssh"
    replace: "doctl compute ssh try"
  - trigger: ":doctl try delete"
    replace: "doctl compute droplet delete -f try"

  - trigger: ":doctl dev create"
    replace: "doctl compute droplet create --image ubuntu-22-04-x64 --size s-2vcpu-2gb --region sfo3 --ssh-keys $(doctl compute ssh-key list | awk '$2 == \"try\" {print $1}') dev"
  - trigger: ":doctl dev ssh"
    replace: "doctl compute ssh dev"
  - trigger: ":doctl dev delete"
    replace: "doctl compute droplet delete -f dev"

  # ai
  - trigger: ":add ollama"
    replace: "open https://ollama.com/download"

  - trigger: ":add android"
    replace: "open https://docs.expo.dev/workflow/android-studio-emulator"

  # download
  - trigger: ":fast-dl"
    replace: "aria2c -x 16 -s 16 -j 16 -k 1M -c "
  - trigger: ":fast-yt-dlp"
    replace: "yt-dlp --cookies-from-browser chrome --external-downloader aria2c --external-downloader-args \"-x16 -s16 -k2M\" "
  - trigger: ":fast-audio-dl"
    replace: "yt-dlp --cookies-from-browser chrome --external-downloader aria2c --external-downloader-args \"-x16 -s16 -k2M\" -x --no-playlist "

  # meta
  - trigger: ":trigger"
    replace: |
      - trigger: ""
        replace: ""

  # flarectl script
  - trigger: ":flarectl ip"
    replace: |
      bash << 'EOF'
      source ~/development.sh
      update_cf_dns() {
        local domain="$1"
        local new_ip="$2"
        flarectl dns list --zone "$domain" --name "$domain" --type A | grep -v "ID" | awk '{print $1}' | xargs -I {} flarectl dns delete --zone "$domain" --id "{}" 2>/dev/null || true
        flarectl dns create --zone "$domain" --name "$domain" --type A --ttl 1 --proxy --content "$new_ip"
        flarectl dns list --zone "$domain" --name "www.$domain" --type A | grep -v "ID" | awk '{print $1}' | xargs -I {} flarectl dns delete --zone "$domain" --id "{}" 2>/dev/null || true
        flarectl dns create --zone "$domain" --name "www.$domain" --type A --ttl 1 --proxy --content "$new_ip"
      }
      update_cf_dns "
